{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/Sections/Map.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/datas.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/Sections/OreumWeather.js","components/utils/Scroll.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadPage/UploadPage.js","components/views/DetailOreumRoomPage/Sections/OreumImage.js","components/views/DetailOreumRoomPage/Sections/OreumInfo.js","components/views/DetailOreumRoomPage/DetailOreumRoomPage.js","components/views/SearchOreum/Sections/Calendar.js","components/views/SearchOreum/SearchOreum.js","components/views/OreumDetail/Sections/OreumTabs.js","components/views/OreumDetail/OreumDetail.js","components/views/Not/Not.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","kakao","window","Map","useHistory","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","positions","content","latlng","i","length","marker","Marker","position","infowindow","InfoWindow","event","addListener","makeOverListener","makeOutListener","open","close","id","className","style","width","height","margin","onClick","ImageSlider","autoplay","images","image","key","maxHeight","src","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","area","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","e","currentTarget","refreshFunction","api","OreumWeather","url","weather","setWeather","responseData","temperature","main","temp","loading","d","day","getDay","month","getMonth","year","getFullYear","date","getDate","dateBuilder","Date","Math","round","Scroll","ScrollY","setScrollY","BtnStatus","setBtnStatus","handleFollow","pageYOffset","console","log","addEventListener","removeEventListener","scrollTo","top","behavior","size","LandingPage","오름방들","오름방들설정","Skip","setSkip","Limit","PostSize","setPostSize","Filters","오름가져오기","skip","limit","body","post","success","loadMore","oreumInfo","postSize","alert","오름카드설정","oreum","lg","md","xs","cover","href","title","filters","category","newFilters","showFilterResults","display","justifyContent","newSearchTerm","searchTerm","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","Item","prefix","UserOutlined","color","onBlur","LockOutlined","fontSize","border","padding","borderRadius","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","confirmPassword","oneOf","moment","unix","registerUser","label","hasFeedback","validateStatus","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","alt","AlignRightOutlined","placement","closable","onClose","Footer","backgroundColor","flexDirection","alignItems","SmileOutlined","FileUpload","이미지","이미지변경","deleteHandler","currenIndex","newImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","widthh","overflowX","index","지역들","UploadPage","이름","이름설정","설명","설명설정","톡방","톡방설정","지역","지역설정","이미지설정","maxWidth","writer","description","Axios","selected","item","OreumImage","Images","setImages","detail","original","thumbnail","items","OreumInfo","DetailOreumRoomPage","oreumId","match","params","Oreum","setOreum","gutter","Calendar","SearchOreum","OreumData","slice","Oreums","pageNumber","setPageNumber","오름검색","오름검색설정","페이지","usersPerPage","pagesVisited","newOreum","filter","val","toLowerCase","includes","place","displayUsers","scope","pageCount","ceil","target","class","previousLabel","nextLabel","marginPagesDisplayed","onPageChange","containerClassName","activeClassName","previousClassName","nextClassName","OreumTabs","container","options","오름","latitude","longitude","inputRef","useRef","댓글","댓글변경","입력값","입력값변경","댓글창","글","Tabs","Tab","eventKey","onKeyPress","current","new댓글","unshift","focus","ref","OreumDetail","useParams","찾은오름","find","오름들","오름이미지","pyogo","vigo","explain","Not","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fb8aaf6.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { kakao } = window;\r\n\r\nfunction Map() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    const mapContainer = document.getElementById(\"myMap\");\r\n    const mapOption = {\r\n      center: new kakao.maps.LatLng(33.402237, 126.494586),\r\n      level: 10,\r\n    };\r\n    var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    var positions = [\r\n      {\r\n        content: \"아부오름\",\r\n        latlng: new kakao.maps.LatLng(33.448875, 126.777283),\r\n      },\r\n      {\r\n        content: \"아끈다랑쉬\",\r\n        latlng: new kakao.maps.LatLng(33.47413717, 126.8306516),\r\n      },\r\n      {\r\n        content: \"알밤오름\",\r\n        latlng: new kakao.maps.LatLng(33.480757, 126.885675),\r\n      },\r\n      {\r\n        content: \"알오름\",\r\n        latlng: new kakao.maps.LatLng(33.489746, 126.713135),\r\n      },\r\n      {\r\n        content: \"안돌오름\",\r\n        latlng: new kakao.maps.LatLng(33.455814, 126.757126),\r\n      },\r\n      {\r\n        content: \"안세미\",\r\n        latlng: new kakao.maps.LatLng(33.467098, 126.608124),\r\n      },\r\n      {\r\n        content: \"백약이오름\",\r\n        latlng: new kakao.maps.LatLng(33.43680944, 126.7897666),\r\n      },\r\n      {\r\n        content: \"밝은오름\",\r\n        latlng: new kakao.maps.LatLng(33.360935, 126.265854),\r\n      },\r\n      {\r\n        content: \"바농오름\",\r\n        latlng: new kakao.maps.LatLng(33.45377549, 126.6538018),\r\n      },\r\n      {\r\n        content: \"비치미오름\",\r\n        latlng: new kakao.maps.LatLng(33.426395, 126.76329),\r\n      },\r\n\r\n      {\r\n        content: \"밧돌오름\",\r\n        latlng: new kakao.maps.LatLng(33.460716, 126.76297),\r\n      },\r\n      {\r\n        content: \"천아오름\",\r\n        latlng: new kakao.maps.LatLng(33.404919, 126.298607),\r\n      },\r\n      {\r\n        content: \"칡오름\",\r\n        latlng: new kakao.maps.LatLng(33.283329, 126.603737),\r\n      },\r\n      {\r\n        content: \"대병악\",\r\n        latlng: new kakao.maps.LatLng(33.306248, 126.367577),\r\n      },\r\n      {\r\n        content: \"대수산봉\",\r\n        latlng: new kakao.maps.LatLng(33.438522, 126.902069),\r\n      },\r\n      {\r\n        content: \"대왕산\",\r\n        latlng: new kakao.maps.LatLng(33.455917, 126.872673),\r\n      },\r\n      {\r\n        content: \"다랑쉬\",\r\n        latlng: new kakao.maps.LatLng(33.475208, 126.819862),\r\n      },\r\n      {\r\n        content: \"달산봉\",\r\n        latlng: new kakao.maps.LatLng(33.345638, 126.832405),\r\n      },\r\n      {\r\n        content: \"당오름\",\r\n        latlng: new kakao.maps.LatLng(33.468353, 126.777916),\r\n      },\r\n      {\r\n        content: \"당산봉\",\r\n        latlng: new kakao.maps.LatLng(33.308826, 126.172981),\r\n      },\r\n      { content: \"단산\", latlng: new kakao.maps.LatLng(33.243938, 126.288719) },\r\n      {\r\n        content: \"도청오름\",\r\n        latlng: new kakao.maps.LatLng(33.315445, 126.814339),\r\n      },\r\n      {\r\n        content: \"독자봉\",\r\n        latlng: new kakao.maps.LatLng(33.387119, 126.854477),\r\n      },\r\n      {\r\n        content: \"돔배오름\",\r\n        latlng: new kakao.maps.LatLng(33.429062, 126.668571),\r\n      },\r\n      {\r\n        content: \"돛오름\",\r\n        latlng: new kakao.maps.LatLng(33.48107138, 126.8015166),\r\n      },\r\n      {\r\n        content: \"둔지봉\",\r\n        latlng: new kakao.maps.LatLng(33.502773, 126.795341),\r\n      },\r\n      {\r\n        content: \"두산봉\",\r\n        latlng: new kakao.maps.LatLng(33.481148, 126.885353),\r\n      },\r\n      {\r\n        content: \"어대오름\",\r\n        latlng: new kakao.maps.LatLng(33.49564978, 126.7608417),\r\n      },\r\n      {\r\n        content: \"어도오름\",\r\n        latlng: new kakao.maps.LatLng(33.421005, 126.307381),\r\n      },\r\n      {\r\n        content: \"은월봉(윤드리오름)\",\r\n        latlng: new kakao.maps.LatLng(33.46896, 126.854477),\r\n      },\r\n      {\r\n        content: \"갑선이오름\",\r\n        latlng: new kakao.maps.LatLng(33.359951, 126.781845),\r\n      },\r\n      {\r\n        content: \"개오름(성읍)\",\r\n        latlng: new kakao.maps.LatLng(33.423016, 126.772675),\r\n      },\r\n      {\r\n        content: \"가마오름\",\r\n        latlng: new kakao.maps.LatLng(33.305321, 126.246628),\r\n      },\r\n      {\r\n        content: \"감낭오름\",\r\n        latlng: new kakao.maps.LatLng(33.324684, 126.350502),\r\n      },\r\n      {\r\n        content: \"가세오름\",\r\n        latlng: new kakao.maps.LatLng(33.331295, 126.78109),\r\n      },\r\n      {\r\n        content: \"가시오름\",\r\n        latlng: new kakao.maps.LatLng(33.247208, 126.243866),\r\n      },\r\n      {\r\n        content: \"거린오름\",\r\n        latlng: new kakao.maps.LatLng(33.304913, 126.332619),\r\n      },\r\n      {\r\n        content: \"걸리오름\",\r\n        latlng: new kakao.maps.LatLng(33.376331, 126.815575),\r\n      },\r\n      {\r\n        content: \"거문오름\",\r\n        latlng: new kakao.maps.LatLng(33.456268, 126.720299),\r\n      },\r\n      {\r\n        content: \"거슨새미\",\r\n        latlng: new kakao.maps.LatLng(33.450577, 126.759544),\r\n      },\r\n      {\r\n        content: \"갯거리오름\",\r\n        latlng: new kakao.maps.LatLng(33.3766636, 126.292931),\r\n      },\r\n      {\r\n        content: \"극락오름\",\r\n        latlng: new kakao.maps.LatLng(33.436234, 126.414978),\r\n      },\r\n      {\r\n        content: \"금오름\",\r\n        latlng: new kakao.maps.LatLng(33.35722, 126.305847),\r\n      },\r\n      {\r\n        content: \"고근산\",\r\n        latlng: new kakao.maps.LatLng(33.268082, 126.514198),\r\n      },\r\n      {\r\n        content: \"궁대악\",\r\n        latlng: new kakao.maps.LatLng(33.435707, 126.823044),\r\n      },\r\n      { content: \"군산\", latlng: new kakao.maps.LatLng(33.251938, 126.370857) },\r\n      {\r\n        content: \"이달봉\",\r\n        latlng: new kakao.maps.LatLng(33.363838, 126.348381),\r\n      },\r\n      {\r\n        content: \"이달이촛대봉\",\r\n        latlng: new kakao.maps.LatLng(33.366447, 126.347038),\r\n      },\r\n      {\r\n        content: \"인정오름\",\r\n        latlng: new kakao.maps.LatLng(33.283649, 126.585411),\r\n      },\r\n      {\r\n        content: \"자배봉\",\r\n        latlng: new kakao.maps.LatLng(33.299992, 126.675797),\r\n      },\r\n      {\r\n        content: \"제지기오름\",\r\n        latlng: new kakao.maps.LatLng(33.241749, 126.609947),\r\n      },\r\n      {\r\n        content: \"저지오름\",\r\n        latlng: new kakao.maps.LatLng(33.334156, 126.2509),\r\n      },\r\n      {\r\n        content: \"정물오름\",\r\n        latlng: new kakao.maps.LatLng(33.339428, 126.329353),\r\n      },\r\n      {\r\n        content: \"제석오름\",\r\n        latlng: new kakao.maps.LatLng(33.347694, 126.835685),\r\n      },\r\n      {\r\n        content: \"지미봉\",\r\n        latlng: new kakao.maps.LatLng(33.495327, 126.901497),\r\n      },\r\n      {\r\n        content: \"좌보미\",\r\n        latlng: new kakao.maps.LatLng(33.43609516, 126.8067627),\r\n      },\r\n      {\r\n        content: \"모구리오름\",\r\n        latlng: new kakao.maps.LatLng(33.408043, 126.8284),\r\n      },\r\n      {\r\n        content: \"모지오름\",\r\n        latlng: new kakao.maps.LatLng(33.393829, 126.767769),\r\n      },\r\n      {\r\n        content: \"무악(개오름)\",\r\n        latlng: new kakao.maps.LatLng(33.315536, 126.369118),\r\n      },\r\n      {\r\n        content: \"명월오름\",\r\n        latlng: new kakao.maps.LatLng(33.382324, 126.279259),\r\n      },\r\n      {\r\n        content: \"묘산봉\",\r\n        latlng: new kakao.maps.LatLng(33.543922, 126.744804),\r\n      },\r\n      {\r\n        content: \"남산봉\",\r\n        latlng: new kakao.maps.LatLng(33.384289, 126.810814),\r\n      },\r\n      {\r\n        content: \"낭끼오름\",\r\n        latlng: new kakao.maps.LatLng(33.435303, 126.841972),\r\n      },\r\n      { content: \"넉시악\", latlng: new kakao.maps.LatLng(33.305565, 126.7146) },\r\n      {\r\n        content: \"늡서리\",\r\n        latlng: new kakao.maps.LatLng(33.441711, 126.66494),\r\n      },\r\n      {\r\n        content: \"높은오름\",\r\n        latlng: new kakao.maps.LatLng(33.457088, 126.792419),\r\n      },\r\n      {\r\n        content: \"삼매봉\",\r\n        latlng: new kakao.maps.LatLng(33.244247, 126.54631),\r\n      },\r\n      {\r\n        content: \"생길이오름\",\r\n        latlng: new kakao.maps.LatLng(33.305759, 126.642708),\r\n      },\r\n      {\r\n        content: \"서걸세\",\r\n        latlng: new kakao.maps.LatLng(33.280914, 126.618401),\r\n      },\r\n      {\r\n        content: \"설오름\",\r\n        latlng: new kakao.maps.LatLng(33.370998, 126.769951),\r\n      },\r\n      {\r\n        content: \"성불오름\",\r\n        latlng: new kakao.maps.LatLng(33.423302, 126.749092),\r\n      },\r\n      {\r\n        content: \"섯알오름\",\r\n        latlng: new kakao.maps.LatLng(33.20594, 126.281504),\r\n      },\r\n      {\r\n        content: \"서우봉\",\r\n        latlng: new kakao.maps.LatLng(33.54575, 126.677505),\r\n      },\r\n      {\r\n        content: \"새신오름\",\r\n        latlng: new kakao.maps.LatLng(33.297661, 126.238441),\r\n      },\r\n      {\r\n        content: \"식은이오름\",\r\n        latlng: new kakao.maps.LatLng(33.473301, 126.747414),\r\n      },\r\n      {\r\n        content: \"식산봉\",\r\n        latlng: new kakao.maps.LatLng(33.465843, 126.919968),\r\n      },\r\n      {\r\n        content: \"소병악\",\r\n        latlng: new kakao.maps.LatLng(33.308426, 126.373634),\r\n      },\r\n      {\r\n        content: \"송악산\",\r\n        latlng: new kakao.maps.LatLng(33.200703, 126.289551),\r\n      },\r\n      {\r\n        content: \"수산봉(물메)\",\r\n        latlng: new kakao.maps.LatLng(33.473545, 126.388649),\r\n      },\r\n      {\r\n        content: \"통오름\",\r\n        latlng: new kakao.maps.LatLng(33.39328, 126.855972),\r\n      },\r\n      {\r\n        content: \"토산봉\",\r\n        latlng: new kakao.maps.LatLng(33.32391, 126.773849),\r\n      },\r\n      {\r\n        content: \"따라비오름\",\r\n        latlng: new kakao.maps.LatLng(33.38892, 126.754288),\r\n      },\r\n      {\r\n        content: \"우진제비\",\r\n        latlng: new kakao.maps.LatLng(33.467384, 126.698135),\r\n      },\r\n      {\r\n        content: \"월랑지\",\r\n        latlng: new kakao.maps.LatLng(33.438665, 126.809734),\r\n      },\r\n      {\r\n        content: \"원물오름\",\r\n        latlng: new kakao.maps.LatLng(33.322323, 126.344551),\r\n      },\r\n      {\r\n        content: \"열안지오름\",\r\n        latlng: new kakao.maps.LatLng(33.47307434, 126.605356),\r\n      },\r\n      {\r\n        content: \"영천악\",\r\n        latlng: new kakao.maps.LatLng(33.295338, 126.600677),\r\n      },\r\n      {\r\n        content: \"영주산\",\r\n        latlng: new kakao.maps.LatLng(33.40456816, 126.7962446),\r\n      },\r\n      {\r\n        content: \"용눈이오름\",\r\n        latlng: new kakao.maps.LatLng(33.45987829, 126.8326896),\r\n      },\r\n      {\r\n        content: \"유건에오름\",\r\n        latlng: new kakao.maps.LatLng(33.413563, 126.847069),\r\n      },\r\n    ];\r\n\r\n    for (var i = 0; i < positions.length; i++) {\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: map, // 마커를 표시할 지도\r\n        position: positions[i].latlng, // 마커의 위치\r\n      });\r\n\r\n      // 마커에 표시할 인포윈도우를 생성합니다\r\n      var infowindow = new kakao.maps.InfoWindow({\r\n        content: positions[i].content, // 인포윈도우에 표시할 내용\r\n      });\r\n\r\n      // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다\r\n      // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n      kakao.maps.event.addListener(\r\n        marker,\r\n        \"mouseover\",\r\n        makeOverListener(map, marker, infowindow)\r\n      );\r\n      kakao.maps.event.addListener(\r\n        marker,\r\n        \"mouseout\",\r\n        makeOutListener(infowindow)\r\n      );\r\n    }\r\n    function makeOverListener(map, marker, infowindow) {\r\n      return function () {\r\n        infowindow.open(map, marker);\r\n      };\r\n    }\r\n    function makeOutListener(infowindow) {\r\n      return function () {\r\n        infowindow.close();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"myMap\"\r\n        className=\" img-fluid map ms-md-5 mt-2\"\r\n        style={{\r\n          width: \"600px\",\r\n          height: \"400px\",\r\n        }}\r\n      ></div>\r\n      <button\r\n        className=\"btn btn-dark d-block mt-2 btn-lg\"\r\n        style={{ margin: \"auto\" }}\r\n        onClick={() => {\r\n          history.push(\"/searchoreum\");\r\n        }}\r\n      >\r\n        오름 검색 하러가기\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\n\r\nfunction ImageSlider(props) {\r\n  return (\r\n    <div>\r\n      <Carousel autoplay>\r\n        {props.images.map((image, i) => (\r\n          <div key={i} className=\"mt-3\">\r\n            <img\r\n              style={{ width: \"100%\", maxHeight: \"200px\" }}\r\n              src={`https://weoreum.herokuapp.com/${image}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSlider;\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Checkbox } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n  const [Checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = (value) => {\r\n    // 누른 것의 Index를 구하고\r\n    const currentIndex = Checked.indexOf(value);\r\n\r\n    //전체 Checked된 State에서 현재 누른 Checked가 이미 있다면\r\n    const newChecked = [...Checked];\r\n\r\n    // State 넣어준다.\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n      // 빼주고\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n    props.handleFilters(newChecked);\r\n  };\r\n\r\n  const renderCheckboxList = () =>\r\n    props.list &&\r\n    props.list.map((value, i) => (\r\n      <React.Fragment key={i}>\r\n        <Checkbox\r\n          onChange={() => handleToggle(value._id)}\r\n          checked={Checked.indexOf(value._id) === -1 ? false : true}\r\n          className=\"me-1\"\r\n        />\r\n        <span className=\"me-3\">{value.name}</span>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <Collapse defaultActiveKey={[\"1\"]}>\r\n        <Panel header=\"지역 빠른 검색\" key=\"1\">\r\n          {renderCheckboxList()}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","const area = [\r\n  {\r\n    _id: 1,\r\n    name: \"제주시\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: \"서귀포시\",\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: \"애월읍\",\r\n  },\r\n  {\r\n    _id: 4,\r\n    name: \"한림읍\",\r\n  },\r\n  {\r\n    _id: 5,\r\n    name: \"한경면\",\r\n  },\r\n  {\r\n    _id: 6,\r\n    name: \"대정읍\",\r\n  },\r\n  {\r\n    _id: 7,\r\n    name: \"안덕면\",\r\n  },\r\n  {\r\n    _id: 8,\r\n    name: \"중문\",\r\n  },\r\n  {\r\n    _id: 9,\r\n    name: \"남원읍\",\r\n  },\r\n  {\r\n    _id: 10,\r\n    name: \"표선면\",\r\n  },\r\n  {\r\n    _id: 11,\r\n    name: \"성산읍\",\r\n  },\r\n  {\r\n    _id: 12,\r\n    name: \"구좌읍\",\r\n  },\r\n  {\r\n    _id: 13,\r\n    name: \"조천읍\",\r\n  },\r\n];\r\n\r\nexport { area };\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const searchHandler = (e) => {\r\n    setSearchTerm(e.currentTarget.value);\r\n    props.refreshFunction(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"검색하기\"\r\n        onChange={searchHandler}\r\n        style={{ width: 200 }}\r\n        value={SearchTerm}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFeature;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst api = {\r\n  key: \"5e149f81494e14c36eddba8aa6a240cc\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction OreumWeather() {\r\n  // 날짜 가져오기\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    // sunday 먼저..!!\r\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Tur\", \"Fri\", \"Sat\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n    let date = d.getDate();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const city = \"jeju\";\r\n  const url = `${api.base}weather?q=${city}&appid=${api.key}`;\r\n  const [weather, setWeather] = useState(\"\");\r\n\r\n  // 날씨 가져오기\r\n  axios.get(url).then((responseData) => {\r\n    const data = responseData.data;\r\n\r\n    setWeather({\r\n      id: data.weather[0].id,\r\n      temperature: data.main.temp,\r\n      main: data.weather[0].main,\r\n      loading: false,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        typeof weather.main != \"undefined\"\r\n          ? weather.main.temp > 16\r\n            ? \"weatheroreum warm\"\r\n            : \"weatheroreum\"\r\n          : \"weatheroreum \"\r\n      }\r\n    >\r\n      <main>\r\n        {typeof weather.main != \"undefined\" ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">제주도</div>\r\n              <div className=\"date\">{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">\r\n                {Math.round(weather.temperature - 273.15)}°c\r\n              </div>\r\n              <div className=\"weather\">{weather.main}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OreumWeather;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\n\r\nfunction Scroll() {\r\n  const [ScrollY, setScrollY] = useState(0);\r\n  const [BtnStatus, setBtnStatus] = useState(false); // 버튼 상태\r\n\r\n  const handleFollow = () => {\r\n    setScrollY(window.pageYOffset);\r\n    if (ScrollY > 150) {\r\n      // 150 이상이면 버튼이 보이게\r\n      setBtnStatus(true);\r\n    } else {\r\n      // 100 이하면 버튼이 사라지게\r\n      setBtnStatus(false);\r\n    }\r\n  };\r\n\r\n  const handleTop = () => {\r\n    // 클릭하면 스크롤이 위로 올라가는 함수\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    setScrollY(0); // ScrollY 의 값을 초기화\r\n    setBtnStatus(false); // BtnStatus의 값을 false로 바꿈 => 버튼 숨김\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"ScrollY is \", ScrollY); // ScrollY가 변화할때마다 값을 콘솔에 출력\r\n  }, [ScrollY]);\r\n\r\n  useEffect(() => {\r\n    const watch = () => {\r\n      window.addEventListener(\"scroll\", handleFollow);\r\n    };\r\n    watch();\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleFollow);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <FaArrowCircleUp\r\n        className={BtnStatus ? \"topBtn active\" : \"topBtn\"}\r\n        onClick={handleTop}\r\n        size=\"30\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./LandingPage.css\";\nimport Map from \"./Sections/Map\";\nimport axios from \"axios\";\nimport ImageSlider from \"../../utils/ImageSlider\";\nimport { Card, Row, Col } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport CheckBox from \"./Sections/CheckBox\";\nimport { area } from \"./Sections/datas\";\nimport SearchFeature from \"./Sections/SearchFeature\";\nimport OreumWeather from \"./Sections/OreumWeather\";\nimport Scroll from \"../../utils/Scroll\";\n\nfunction LandingPage() {\n  const [오름방들, 오름방들설정] = useState([]);\n  const [Skip, setSkip] = useState(0);\n  const [Limit, setLimit] = useState(4);\n  const [PostSize, setPostSize] = useState(0);\n  const [Filters, setFilters] = useState({\n    area: [],\n  });\n  const [SearchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    let body = {\n      skip: Skip,\n      limit: Limit,\n    };\n    오름가져오기(body);\n  }, []);\n\n  const 오름가져오기 = (body) => {\n    axios.post(\"/api/oreum/oreums\", body).then((response) => {\n      if (response.data.success) {\n        if (body.loadMore) {\n          오름방들설정([...오름방들, ...response.data.oreumInfo]);\n        } else {\n          오름방들설정(response.data.oreumInfo);\n        }\n        setPostSize(response.data.postSize);\n      } else {\n        alert(\"정보를 가져오는데 실패 했습니다.\");\n      }\n    });\n  };\n\n  const 더보기버튼 = () => {\n    let skip = Skip + Limit;\n\n    let body = {\n      skip: skip,\n      limit: Limit,\n      loadMore: true,\n    };\n    오름가져오기(body);\n    setSkip(skip);\n  };\n\n  const 오름카드설정 = 오름방들.map((oreum, i) => {\n    return (\n      <Col lg={6} md={8} xs={24} key={i}>\n        <Card\n          cover={\n            <a href={`/oreum/${oreum._id}`}>\n              <ImageSlider images={oreum.images} />\n            </a>\n          }\n        >\n          <p className=\"fs-5\">{oreum.title}</p>\n        </Card>\n      </Col>\n    );\n  });\n\n  const showFilterResults = (filters) => {\n    let body = {\n      skip: 0,\n      limit: Limit,\n      filters: filters,\n    };\n\n    오름가져오기(body);\n    setSkip(0);\n  };\n\n  const handleFilters = (filters, category) => {\n    const newFilters = { ...Filters };\n\n    newFilters[category] = filters;\n\n    showFilterResults(newFilters);\n  };\n\n  const updateSearchTerm = (newSearchTerm) => {\n    let body = {\n      skip: 0,\n      limit: Limit,\n      filters: Filters,\n      searchTerm: newSearchTerm,\n    };\n\n    setSkip(0);\n    setSearchTerm(newSearchTerm);\n    오름가져오기(body);\n  };\n\n  return (\n    <>\n      <div className=\"bg\">\n        <div>\n          <p className=\"text-center fs-1 font-NanumSquare fw-bolder text-white bg-title\">\n            우리 오름 같이 갈 사람을 구해봐요\n          </p>\n          <div className=\"d-md-flex justify-content-center\">\n            <OreumWeather />\n            <Map />\n          </div>\n        </div>\n      </div>\n\n      <div\n        className=\"text-center  bg-dark bg-gradient rounded  mt-4\"\n        style={{ width: 200, margin: \"auto\" }}\n      >\n        <h2 className=\"text-white\">오름방 목록</h2>\n      </div>\n\n      <div className=\"container mt-4 overflow-hidden \">\n        <CheckBox\n          list={area}\n          handleFilters={(filters) => handleFilters(filters, \"area\")}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            margin: \"1rem auto\",\n          }}\n        >\n          <div className=\"btn border border-black-50 me-3 \">\n            <a href=\"oreum/upload\" className=\"text-black-50\">\n              오름방 등록\n            </a>\n          </div>\n          <SearchFeature refreshFunction={updateSearchTerm} />\n        </div>\n        <div className=\"row gx-5\">{오름카드설정}</div>\n        <br />\n        {PostSize >= Limit && (\n          <div className=\"d-flex justify-content-center\">\n            <button className=\"btn btn-dark\" onClick={더보기버튼}>\n              더보기\n            </button>\n          </div>\n        )}\n      </div>\n      <Scroll />\n    </>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\")\n    ? localStorage.getItem(\"rememberMe\")\n    : \"\";\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"이메일을 입력하세요.\"),\n        password: Yup.string()\n          .min(6, \"6글자 이상 입력하세요.\")\n          .required(\"비밀번호를 입력하세요.\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem(\"userId\", response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem(\"rememberMe\", values.id);\n                } else {\n                  localStorage.removeItem(\"rememberMe\");\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage(\"비밀번호를 확인하세요\");\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage(\"비밀번호를 확인하세요\");\n              setTimeout(() => {\n                setFormErrorMessage(\"\");\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>로그인</Title>\n            <form onSubmit={handleSubmit} style={{ width: \"300px\" }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                  placeholder=\"이메일을 입력하세요.\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.email}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                  placeholder=\"비밀번호를 입력하세요.\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.password}\n                  </div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: \"#ff0000bf\",\n                      fontSize: \"0.7rem\",\n                      border: \"1px solid\",\n                      padding: \"1rem\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n              <br />\n              <Form.Item>\n                {/* <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  기억하기\n                </Checkbox> */}\n                {/* <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: \"right\" }}\n                >\n                  비밀번호 찾기\n                </a> */}\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: \"100%\" }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    로그인 하기\n                  </Button>\n                </div>\n                <a href=\"/register\">회원가입</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","import React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"이름을 입력하세요\"),\n        email: Yup.string()\n          .email(\"이메일이 잘못되었습니다\")\n          .required(\"이메일 입력하세요\"),\n        password: Yup.string()\n          .min(6, \"비밀번호 6글자 이상 작성하세요\")\n          .required(\"비밀번호 입력하세요\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"비밀번호 다시 입력하세요\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(\"아이디가 존재합니다.\");\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app container\">\n            <h2>회원가입</h2>\n            <br />\n            <Form\n              style={{ minWidth: \"300px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"이름\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"이름을 입력하세요\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.name}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item\n                required\n                label=\"아이디(이메일) \"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"이메일 입력하세요\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.email}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item\n                required\n                label=\"비밀번호\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"비밀번호를 입력하세요\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.password}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item required label=\"비밀번호확인\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"비밀번호 다시 입력하세요\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.confirmPassword}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  완료\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { Menu } from \"antd\";\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">오름방 목록 </a>\n      </Menu.Item>\n      <Menu.Item key=\"search\">\n        <a href=\"/searchoreum\">오름검색</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu } from \"antd\";\nimport axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector((state) => state.user);\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert(\"Log Out Failed\");\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">로그인</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">회원가입</a>\n        </Menu.Item>\n      </Menu>\n    );\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"upload\">\n          <a href=\"/oreum/upload\">오름방 등록</a>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>로그아웃</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from \"react\";\nimport LeftMenu from \"./Sections/LeftMenu\";\nimport RightMenu from \"./Sections/RightMenu\";\nimport { Drawer, Button } from \"antd\";\nimport { AlignRightOutlined } from \"@ant-design/icons\";\nimport \"./Sections/Navbar.css\";\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <nav\n      className=\"menu \"\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\n    >\n      <div className=\"menu__logo\">\n        <a href=\"/\">\n          <img src=\"./assets/logo.png\" alt=\"\" />\n        </a>\n      </div>\n      <div className=\"menu__container mt-3\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <AlignRightOutlined />\n        </Button>\n        <Drawer\n          title=\"메뉴\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { SmileOutlined } from \"@ant-design/icons\";\n\nfunction Footer() {\n  return (\n    <div\n      className=\"mt-3\"\n      style={{\n        backgroundColor: \"#333\",\n        height: \"80px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"1rem\",\n        color: \"#fff\",\n      }}\n    >\n      <p>\n        {\" \"}\n        Jin <SmileOutlined />\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { BsPlus } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\n\r\nfunction FileUpload(props) {\r\n  const [이미지, 이미지변경] = useState([]);\r\n\r\n  const 이미지등록 = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/fomr-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n    axios.post(\"/api/oreum/image\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        이미지변경([...이미지, response.data.filePath]);\r\n        props.refreshFunction([...이미지, response.data.filePath]);\r\n      } else {\r\n        alert(\"파일을 저장하는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currenIndex = 이미지.indexOf(image);\r\n\r\n    let newImages = [...이미지];\r\n    newImages.splice(currenIndex, 1);\r\n\r\n    이미지변경(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-md-flex justify-content-md-between mt-3\">\r\n      <Dropzone onDrop={이미지등록}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              style={{\r\n                width: 300,\r\n                height: 240,\r\n                border: \"1px solid lightgray\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              {...getRootProps()}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <BsPlus style={{ fontSize: \"4rem\" }} />\r\n              <br />\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <div\r\n        className=\"bg-secondary bg-opacity-25 mt-3\"\r\n        style={{\r\n          display: \"flex\",\r\n          widthh: \"300px\",\r\n          height: \"240px\",\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {이미지.map((이미지, index) => (\r\n          <div onClick={() => deleteHandler(이미지)} key={index}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`https://weoreum.herokuapp.com/${이미지}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React, { useState } from \"react\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst 지역들 = [\r\n  { key: 1, value: \"제주시\" },\r\n  { key: 2, value: \"서귀포시\" },\r\n  { key: 3, value: \"애월읍\" },\r\n  { key: 4, value: \"한림읍\" },\r\n  { key: 5, value: \"한경면\" },\r\n  { key: 6, value: \"대정읍\" },\r\n  { key: 7, value: \"안덕면\" },\r\n  { key: 8, value: \"중문\" },\r\n  { key: 9, value: \"남원읍\" },\r\n  { key: 10, value: \"표선면\" },\r\n  { key: 11, value: \"성산읍\" },\r\n  { key: 12, value: \"구좌읍\" },\r\n  { key: 13, value: \"조천읍\" },\r\n];\r\n\r\nfunction UploadPage(props) {\r\n  let history = useHistory();\r\n\r\n  const [이름, 이름설정] = useState(\"\");\r\n  const [설명, 설명설정] = useState(\"\");\r\n  const [톡방, 톡방설정] = useState(\"\");\r\n  const [지역, 지역설정] = useState(0);\r\n  const [이미지, 이미지설정] = useState([]);\r\n\r\n  const 오름방입력 = (e) => {\r\n    이름설정(e.currentTarget.value);\r\n  };\r\n  const 설명입력 = (e) => {\r\n    설명설정(e.currentTarget.value);\r\n  };\r\n  const 톡방입력 = (e) => {\r\n    톡방설정(e.currentTarget.value);\r\n  };\r\n  const 지역입력 = (e) => {\r\n    지역설정(e.currentTarget.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    이미지설정(newImages);\r\n  };\r\n\r\n  const 오름방등록 = (e) => {\r\n    if (!이름 || !설명 || !톡방 || !지역 || !이미지) {\r\n      return alert(\"모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n    const body = {\r\n      writer: props.user.userData._id,\r\n      title: 이름,\r\n      description: 설명,\r\n      kakao: 톡방,\r\n      images: 이미지,\r\n      area: 지역,\r\n    };\r\n\r\n    Axios.post(\"/api/oreum\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"등록에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"등록에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\" style={{ maxWidth: \"700px\" }}>\r\n      <div className=\"text-center\">\r\n        <h2>오름방 업로드</h2>\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={오름방등록}>\r\n          {/* {drop} */}\r\n          <FileUpload refreshFunction={updateImages} />\r\n          <br />\r\n          <br />\r\n          <label>오름방 이름</label>\r\n          <input className=\" form-control\" onChange={오름방입력} value={이름} />\r\n          <br />\r\n          <br />\r\n          <label>설명</label>\r\n          <textarea\r\n            className=\" form-control\"\r\n            onChange={설명입력}\r\n            value={설명}\r\n          />\r\n          <br />\r\n          <br />\r\n          <label>카카오톡 오픈방 주소</label>\r\n          <input className=\" form-control\" onChange={톡방입력} value={톡방} />\r\n          <br />\r\n          <br />\r\n          <select className=\"form-select\" onChange={지역입력} value={지역}>\r\n            <option selected>지역 선택</option>\r\n            {지역들.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n          <br />\r\n          <button className=\"btn btn-dark\" htmlType=\"submit\">\r\n            확인\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nfunction OreumImage(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.detail.images && props.detail.images.length > 0) {\r\n      let images = [];\r\n\r\n      props.detail.images.map((item) => {\r\n        images.push({\r\n          original: `https://weoreum.herokuapp.com/${item}`,\r\n          thumbnail: `https://weoreum.herokuapp.com/${item}`,\r\n        });\r\n      });\r\n      setImages(images);\r\n    }\r\n  }, [props.detail]);\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <ImageGallery items={Images} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OreumImage;\r\n","import React from \"react\";\r\nimport { Descriptions } from \"antd\";\r\n\r\nfunction OreumInfo(props) {\r\n  return (\r\n    <div className=\"mt-3  \">\r\n      <p className=\"border-bottom border-2 border-dark p-1 fs-2\">\r\n        {props.detail.title}\r\n      </p>\r\n      <br />\r\n      <p className=\"border-bottom border-2  p-2 fs-4\">\r\n        카카오톡방 주소 : {props.detail.kakao}\r\n      </p>\r\n      <p className=\" p-2 fs-4\">{props.detail.description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OreumInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport OreumImage from \"./Sections/OreumImage\";\r\nimport OreumInfo from \"./Sections/OreumInfo\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nfunction DetailOreumRoomPage(props) {\r\n  const oreumId = props.match.params.oreumId;\r\n\r\n  const [Oreum, setOreum] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/oreum/oreums_by_id?id=${oreumId}&type=single`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          console.log(\"response.data\", response.data);\r\n          setOreum(response.data.oreum[0]);\r\n        } else {\r\n          alert(\"상세 정보 가져오기를 실패했습니다.\");\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-md-5\">\r\n      <Row gutter={(16, 16)}>\r\n        <Col lg={12} sm={24}>\r\n          <OreumImage detail={Oreum} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          <OreumInfo detail={Oreum} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailOreumRoomPage;\r\n","import React, { useState } from \"react\";\r\nimport Calendare from \"react-calendar\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nfunction Calendar() {\r\n  const [value, onChange] = useState(new Date());\r\n  return (\r\n    <div className=\"me-md-3\">\r\n      <Calendare onChange={onChange} value={value} className=\"img-fluid\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./page.css\";\r\nimport axios from \"axios\";\r\nimport OreumData from \"./db.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Calendar from \"./Sections/Calendar\";\r\n\r\nfunction SearchOreum() {\r\n  let history = useHistory();\r\n  const [Oreums, setOreums] = useState(OreumData.slice(0, 90));\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [오름검색, 오름검색설정] = useState(\"\");\r\n  const [페이지, 페이지설정] = useState(10);\r\n\r\n  const usersPerPage = 페이지;\r\n  const pagesVisited = pageNumber * usersPerPage;\r\n\r\n  const newOreum = [\r\n    ...Oreums.filter((val) => {\r\n      if (오름검색 === \"\") {\r\n        return val;\r\n      } else if (\r\n        val.title.toLowerCase().includes(오름검색.toLowerCase()) ||\r\n        val.place.toLowerCase().includes(오름검색.toLowerCase())\r\n      ) {\r\n        return val;\r\n      }\r\n    }),\r\n  ];\r\n\r\n  const displayUsers = newOreum\r\n    .slice(pagesVisited, pagesVisited + usersPerPage)\r\n    .filter((val) => {\r\n      if (오름검색 === \"\") {\r\n        return val;\r\n      } else if (\r\n        val.title.toLowerCase().includes(오름검색.toLowerCase()) ||\r\n        val.place.toLowerCase().includes(오름검색.toLowerCase())\r\n      ) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((oreum, i) => {\r\n      return (\r\n        <tr\r\n          onClick={() => {\r\n            history.push(\"/oreum/detail/\" + oreum.id);\r\n          }}\r\n        >\r\n          <th scope=\"row\">{oreum.id}</th>\r\n          <td>{oreum.title}</td>\r\n          <td>{oreum.place}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const pageCount = Math.ceil(newOreum.length / usersPerPage);\r\n\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg2 container\">\r\n        <div className=\"d-md-flex justify-content-center \">\r\n          <Calendar />\r\n          <div>\r\n            <img\r\n              style={{ width: 400 }}\r\n              src=\"./assets/map.png\"\r\n              className=\"img-fluid\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"오름검색 / 이름,주소\"\r\n              className=\"form-control \"\r\n              onChange={(e) => {\r\n                오름검색설정(e.target.value);\r\n              }}\r\n              value={오름검색}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 container\">\r\n        <h4>\r\n          총 <span className=\"text-danger\">{newOreum.length}개</span> 오름이\r\n          검색되었습니다.\r\n        </h4>\r\n        <table class=\"table table-hover \">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\"></th>\r\n              <th scope=\"col\">이름</th>\r\n              <th scope=\"col\">주소</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{displayUsers}</tbody>\r\n        </table>\r\n\r\n        <ReactPaginate\r\n          pageCount={pageCount}\r\n          previousLabel={\"<\"}\r\n          nextLabel={\">\"}\r\n          marginPagesDisplayed={9}\r\n          onPageChange={changePage}\r\n          containerClassName={\"pagination justify-content-center \"}\r\n          activeClassName={\"page-item page-link\"}\r\n          previousClassName={\"page-link page-item\"}\r\n          nextClassName={\"page-link page-item\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchOreum;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\n\r\nconst { kakao } = window;\r\n\r\nfunction OreumTabs(props) {\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(props.오름.latitude, props.오름.longitude),\r\n      level: 4,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n  }, []);\r\n\r\n  const inputRef = useRef();\r\n\r\n  const [댓글, 댓글변경] = useState([\r\n    \"오 한번 가고싶네요\",\r\n    \"오름이 정말 멋지네요\",\r\n    \"abcdefghweweqweqweqwe\",\r\n  ]);\r\n  const [입력값, 입력값변경] = useState(\"\");\r\n\r\n  const 댓글창 = 댓글.map((글) => {\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <h6>{글}</h6>\r\n        <hr />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const 댓글등록 = () => {\r\n    if (inputRef.current.value == \"\") {\r\n      alert(\"댓글을 입력하세요\");\r\n    } else {\r\n      const new댓글 = [...댓글];\r\n      new댓글.unshift(입력값);\r\n      댓글변경(new댓글);\r\n      입력값변경(\"\");\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const 댓글등록엔터 = (e) => {\r\n    if (inputRef.current.value.length == 0) {\r\n      if (e.key == \"Enter\") {\r\n        alert(\"댓글을 입력하세요2\");\r\n      }\r\n    } else {\r\n      if (e.key == \"Enter\") {\r\n        const new댓글 = [...댓글];\r\n        new댓글.unshift(입력값);\r\n        댓글변경(new댓글);\r\n        입력값변경(\"\");\r\n        inputRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey=\"map\"\r\n      id=\"uncontrolled-tab-example\"\r\n      className=\"mb-3 mytap  nav nav-fill nav-justified \"\r\n    >\r\n      <Tab eventKey=\"map\" title=\"지도\">\r\n        <div\r\n          className=\"img-fluid\"\r\n          id=\"myMap\"\r\n          style={{\r\n            width: \"500px\",\r\n            height: \"500px\",\r\n            margin: \"auto\",\r\n          }}\r\n        ></div>\r\n      </Tab>\r\n      <Tab eventKey=\"comment\" title=\"댓글\">\r\n        <div className=\"d-flex \">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"댓글 작성하기\"\r\n            className=\"form-control me-3\"\r\n            onChange={(e) => {\r\n              입력값변경(e.target.value);\r\n            }}\r\n            value={입력값}\r\n            onKeyPress={댓글등록엔터}\r\n            ref={inputRef}\r\n          />\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            style={{ width: 100 }}\r\n            onClick={댓글등록}\r\n          >\r\n            등록\r\n          </button>\r\n        </div>\r\n        {댓글창}\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default OreumTabs;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport OreumData from \"./db.json\";\r\nimport { Row, Col } from \"antd\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\nimport OreumTabs from \"./Sections/OreumTabs\";\r\nimport Scroll from \"../../utils/Scroll\";\r\n\r\nfunction OreumDetail() {\r\n  const [오름, 오름설정] = useState(OreumData);\r\n  let { id } = useParams();\r\n  let 찾은오름 = 오름.find((오름들) => 오름들.id == id);\r\n\r\n  const [오름이미지, 오름이미지설정] = useState(찾은오름.image);\r\n\r\n  const images = [\r\n    {\r\n      original: 오름이미지,\r\n      thumbnail: 오름이미지,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container mt-md-5\">\r\n      <div>\r\n        <h1 className=\"text-center fw-bold\">{찾은오름.title}</h1>\r\n      </div>\r\n      <Row gutter={(16, 16)}>\r\n        <Col lg={12} sm={24}>\r\n          <ImageGallery items={images} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          <table className=\"table fs-5\">\r\n            <thead></thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\" style={{ width: 100 }}>\r\n                  주소\r\n                </th>\r\n                <td>{찾은오름.place}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">표고</th>\r\n                <td>{찾은오름.pyogo}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">비고</th>\r\n                <td>{찾은오름.vigo}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">설 명</th>\r\n                <td>{찾은오름.explain}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <OreumTabs 오름={찾은오름} />\r\n      <Scroll />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OreumDetail;\r\n","import React from \"react\";\r\n\r\nfunction Not() {\r\n  return (\r\n    <div\r\n      className=\"container  text-black  text-center mt-5\"\r\n      style={{ fontSize: \"50px\" }}\r\n    >\r\n      페이지를 찾을수 없습니다.\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Not;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport UploadPage from \"./views/UploadPage/UploadPage\";\nimport DetailOreumRoomPage from \"./views/DetailOreumRoomPage/DetailOreumRoomPage\";\nimport SearchOreum from \"./views/SearchOreum/SearchOreum\";\nimport OreumDetail from \"./views/OreumDetail/OreumDetail\";\nimport Not from \"./views/Not/Not\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route\n            exact\n            path=\"/oreum/upload\"\n            component={Auth(UploadPage, true)}\n          />\n          <Route\n            exact\n            path=\"/oreum/:oreumId\"\n            component={Auth(DetailOreumRoomPage, null)}\n          />\n          <Route\n            exact\n            path=\"/searchoreum\"\n            component={Auth(SearchOreum, null)}\n          />\n          <Route\n            exact\n            path=\"/oreum/detail/:id\"\n            component={Auth(OreumDetail, null)}\n          />\n          <Route path=\"*\" component={Auth(Not, null)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}